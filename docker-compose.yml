version: "3.6"

services:
  autoscan:
    container_name: "autoscan"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "3030/tcp"
    hostname: "autoscan"
    image: "saltydk/autoscan:latest"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/autoscan:/config"
    depends_on:
      - "zurg"
      - "rclone"
      - "plex"
      - "radarr"
      - "sonarr"

petio:
    command:
      - "node"
      - "petio.js"
    container_name: "petio"
    ports:
      - "7777/tcp"
    hostname: "petio"
    image: "ghcr.io/petio-team/petio:latest"
    restart: "unless-stopped"
    user: "1000:1000"
    volumes:
      - "/mnt:/mnt"
      - "/opt/petio:/app/api/config"
    working_dir: "/app"
    depends_on:
      - "radarr"
      - "sonarr"
      - "plex"
 
  petio-mongo:
    command:
      - "mongod"
    container_name: "petio-mongo"
    ports:
      - "27017/tcp"
    hostname: "petio-mongo"
    image: "mongo:4.4"
    restart: "unless-stopped"
    user: "1000:1000"
    volumes:
      - "/mnt:/mnt"
      - "/opt/petio/mongodb/config:/data/configdb"
      - "/opt/petio/mongodb:/data/db"
    depends_on:
      - "petio"

  plex:
    container_name: "plex"
    devices:
      - "/dev/dri:/dev/dri"
    environment:
      - "PLEX_UID=1000"
      - "PLEX_GID=1000"
    ports:
      - "1900/udp"
      - "32400/tcp"
      - "32410/udp"
      - "32412/udp"
      - "32413/udp"
      - "32414/udp"
      - "32469/tcp"
      - "8324/tcp"
    hostname: "plex"
    image: "plexinc/pms-docker:latest"
    restart: "unless-stopped"
    volumes:
      - "/dev/shm:/dev/shm"
      - "/mnt/local/transcodes/plex:/transcode"
      - "/mnt:/mnt"
      - "/opt/plex:/config"
      - "/opt/scripts:/scripts"
    depends_on:
      - "zurg"
      - "rclone"

  prowlarr:
    container_name: "prowlarr"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "9696/tcp"
    hostname: "prowlarr"
    image: "ghcr.io/hotio/prowlarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/prowlarr/Definitions/Custom:/Custom"
      - "/opt/prowlarr:/config"

  radarr:
    container_name: "radarr"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "7878/tcp"
    hostname: "radarr"
    image: "ghcr.io/hotio/radarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/radarr:/config"
      - "/opt/scripts:/scripts"
    depends_on:
      - "zurg"
      - "rclone"

  radarr4k:
    container_name: "radarr4k"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "7878/tcp"
    hostname: "radarr4k"
    image: "ghcr.io/hotio/radarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/radarr4k:/config"
      - "/opt/scripts:/scripts"
    depends_on:
      - "zurg"
      - "rclone"

  radarr4kdv:
    container_name: "radarr4kdv"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "7878/tcp"
    hostname: "radarr4kdv"
    image: "ghcr.io/hotio/radarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/radarr4kdv:/config"
      - "/opt/scripts:/scripts"
    depends_on:
      - "zurg"
      - "rclone"

  radarranime:
    container_name: "radarranime"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "7878/tcp"
    hostname: "radarranime"
    image: "ghcr.io/hotio/radarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/radarranime:/config"
      - "/opt/scripts:/scripts"
    depends_on:
      - "zurg"
      - "rclone"

  rdtclient:
    container_name: "rdtclient"
    environment:
      - "PGID=1000"
      - "PUID=1000"
    ports:
      - "6500/tcp"
    hostname: "rdtclient"
    image: "laster13/rdtclient:amd64"
    restart: "unless-stopped"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/mnt:/mnt"
      - "/opt/rdtclient/data:/data"
      - "/opt/rdtclient/data/db:/data/db"
    depends_on:
      - "zurg"
      - "rclone"

  scannarr:
    container_name: "scannarr"
    entrypoint:
      - "./sonarr_scanner"
    hostname: "scannarr"
    image: "pukabyte/scannarr:latest"
    volumes:
      - "/opt/scannarr/sonarr_scanner/settings_radarr.json:/app/settings_radarr.json:ro"
      - "/opt/scannarr/sonarr_scanner/settings_sonarr.json:/app/settings_sonarr.json:ro"
    working_dir: "/app"
    depends_on:
      - "zurg"
      - "rclone"
      - "radarr"
      - "sonarr"

  sonarr:
    container_name: "sonarr"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "8989/tcp"
    hostname: "sonarr"
    image: "ghcr.io/hotio/sonarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
      - "/opt/sonarr:/config"
    depends_on:
      - "zurg"
      - "rclone"

  sonarr4k:
    container_name: "sonarr4k"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "8989/tcp"
    hostname: "sonarr4k"
    image: "ghcr.io/hotio/sonarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
      - "/opt/sonarr4k:/config"
    depends_on:
      - "zurg"
      - "rclone"

  sonarr4kdv:
    container_name: "sonarr4kdv"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "8989/tcp"
    hostname: "sonarr4kdv"
    image: "ghcr.io/hotio/sonarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
      - "/opt/sonarr4kdv:/config"
    depends_on:
      - "zurg"
      - "rclone"

  sonarranime:
    container_name: "sonarranime"
    environment:
      - "PUID=1000"
      - "PGID=1000"
    ports:
      - "8989/tcp"
    hostname: "sonarranime"
    image: "ghcr.io/hotio/sonarr:release"
    restart: "unless-stopped"
    volumes:
      - "/mnt:/mnt"
      - "/opt/scripts:/scripts"
      - "/opt/sonarranime:/config"
    depends_on:
      - "zurg"
      - "rclone"

  zurg:
    image: "ghcr.io/debridmediamanager/zurg-testing:v0.9.2-hotfix.4"
    container_name: "zurg"
    restart: "unless-stopped"
    ports:
      - "9999:9999"
    volumes:
      - "/opt/zurg-testing/config.yml:/app/config.yml"
      - "zurgdata:/app/data"

  rclone:
    image: "rclone/rclone:latest"
    container_name: "rclone"
    restart: "unless-stopped"
    environment:
      TZ: "Europe/Berlin"
      PUID: "1000"
      PGID: "1000"
    volumes:
      - "/mnt/remote/realdebrid:/data:rshared"
      - "/opt/zurg-testing/rclone.conf:/config/rclone/rclone.conf"
      - "/mnt:/mnt"
    cap_add:
      - "SYS_ADMIN"
    security_opt:
      - "apparmor:unconfined"
    devices:
      - "/dev/fuse:/dev/fuse:rwm"
    depends_on:
      - "zurg"
    command: "mount zurg: /data --allow-non-empty --allow-other --uid=1000 --gid=1000 --cache-dir /mnt/cache --vfs-cache-mode full --vfs-cache-max-age 24h --vfs-cache-max-size 50G --async-read --vfs-read-ahead 128M --vfs-read-chunk-size 64M --vfs-read-chunk-size-limit 2G --use-mmap --buffer-size=64M --dir-cache-time 10s"

volumes:
  zurgdata:
